#include<iostream>
#include<vector>
using namespace std;
struct ABC {
	static const int width = 8;
	static const int base = 100000000;
	vector<int> s;
	ABC(long long num = 0)
	{
		*this = num;
	}
	ABC operator = (long long num)
	{
		s.clear();
		do
		{
			s.push_back(num % base);
			num /= base;

		} while (num > 0);
		return *this;
	}
	ABC operator=(const string& str)
	{
		s.clear();
		int x = 0, length = str.length() / width + 1;
		for (int i = 0; i < length; i++)
		{
			int end = str.length() - i * width;
			int start = max(0, end - width);
			sscanf_s(str.substr(start, end - start).c_str(), "%d", &x);
			s.push_back(x);
		}
		return *this;
	}
	
	ABC operator+(ABC & p) const
	{
		int i, g;
		ABC c;
		for (i = 0, g = 0;; i++)
		{
			if (g == 0 && i >= s.size() && i >= p.s.size()) break;
			int x = g;
			if (i < s.size())
			{
				x += s[i];
			}
			if (i < p.s.size())
			{
				x += p.s[i];
			}
			c.s.push_back(x % base);
			x /= base;

		}
		return c;

	}
};

int main()
{
	ABC c, d,e;
	c = "123456789";
	d = "123654987";
	e = c + d;
	cout << e.s[0];
	/* for(int i = 0;; i++)
	{
		//if (e.s[i] == '/0') break;
		cout << e.s[i];
	}*/

}
